{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/util.js","webpack://[name]/external \"../settings\"","webpack://[name]/external \"request-promise\"","webpack://[name]/external \"pythonic\"","webpack://[name]/external \"querystring\"","webpack://[name]/./src/job.js","webpack://[name]/external \"agenda\"","webpack://[name]/./src/index.js","webpack://[name]/external \"koa-bodyparser\"","webpack://[name]/external \"koa-router\"","webpack://[name]/external \"koa-logger\"","webpack://[name]/external \"koa\"","webpack://[name]/external \"supertest\"","webpack://[name]/external \"ava\"","webpack://[name]/./test.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_koa","_interopRequireDefault","_koaLogger","_koaRouter","_koaBodyparser","app","Koa","router","Router","use","default","async","ctx","next","catch","err","console","dir","body","String","status","onerror","error","throw","JSON","stringify","routes","date","toString","isNaN","getTime","oncePerKey","keys","count","key","fn","repeatPerKey","constructor","countTimes","currentCount","this","ready","Promise","resolveReady","finished","resolveFinished","then","require","_querystring","_pythonic","_requestPromise","_settings","_util","kCustomPromisifiedSymbol","Symbol","kCustomPromisifyArgsSymbol","promisify","original","promisifyContext","errors","TypeError","writable","argumentNames","args","promiseResolve","promiseReject","values","undefined","length","obj","setPrototypeOf","getPrototypeOf","context","defineProperties","getOwnPropertyDescriptors","custom","getCheckJobFormatFunction","jobProperty","defaultJob","job","Error","_objectSpread","getAssertFunction","assertOnCount","errorOnName","jobs","jobAssertions","alreadyExists","notExists","doNotAssert","defineJob","agenda","url","method","callback","done","attrs","data","uri","keyValues","params","replace","query","querystring","race","resolve","reject","setTimeout","settings","timeout","headers","json","fail","message","result","response","insert","update","$set","scheduleTypes","now","bind","getParams","once","schedule","time","parseInt","interval","Date","isValidDate","every","getScheduleJobFunction","scheduleType","getJobOperation","checkFunction","jobFunction","check","jobOperations","create","delete","cancel","numRemoved","remove","jobAssertion","jobOperation","_agenda","_job","bootstrapKoaApp","Agenda","db","address","agendaMongoUrl","collection","jobsReady","on","_mdb","definitions","toArray","jobsCursor","find","jobsArray","all","map","start","getJobMiddleware","errorCode","request","jobName","promiseJobOperation","post","del","put","graceful","log","stop","process","exit","test","AsyncCounter","testApp","testAppRouter","getTestAppUrl","path","agendaAppRequest","before","listen","bootstrapApp","serial","res","send","t","is","fooProps","defineFooEndpoint","route","statusCode","counter","text"],"mappings":"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","file":"./dist/test.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"./dist/test\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"./dist/test\"] = factory();\n\telse\n\t\troot[\"./dist/test\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","import Koa from 'koa';\nimport logger from 'koa-logger';\nimport Router from 'koa-router';\nimport bodyParser from 'koa-bodyparser';\n\nconst bootstrapKoaApp = () => {\n  const app = new Koa();\n  const router = new Router();\n  app.use(logger());\n  app.use(async (ctx, next) => next()\n    .catch(err => {\n      console.dir(err);\n      ctx.body = String(err);\n      ctx.status = err.status || 500;\n    })\n  );\n  app.use(bodyParser({\n    onerror(error, ctx) {\n      ctx.throw(400, `cannot parse request body, ${JSON.stringify(error)}`);\n    }\n  }));\n  app.use(router.routes());\n  return {app, router};\n};\n\nconst isValidDate = date => Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date.getTime());\n\nconst repeatPerKey = (keys = {}) => count => (key, fn) => () => {\n  if (!(key in keys)) {\n    keys[key] = 0;\n  }\n  if (keys[key] < count) {\n    fn();\n    keys[key]++;\n  }\n};\n\nconst oncePerKey = repeatPerKey()(1);\n\nclass AsyncCounter {\n  constructor(countTimes) {\n    let currentCount = 0;\n    this.countTimes = countTimes;\n    this.ready = new Promise(resolveReady => {\n      this.finished = new Promise(resolveFinished => {\n        const count = () => {\n          currentCount++;\n          if (currentCount === countTimes) {\n            resolveFinished();\n          }\n          return currentCount;\n        };\n        this.count = () => this.ready.then(() => count());\n        resolveReady();\n      });\n    });\n  }\n}\n\nexport {bootstrapKoaApp, isValidDate, oncePerKey, AsyncCounter};\n","module.exports = require(\"../settings\");","module.exports = require(\"request-promise\");","module.exports = require(\"pythonic\");","module.exports = require(\"querystring\");","import querystring from 'querystring';\nimport {promisify} from 'util';\nimport {keyValues} from 'pythonic';\nimport rp from 'request-promise';\nimport settings from '../settings';\nimport {isValidDate} from './util';\n\nconst getCheckJobFormatFunction = (jobProperty, defaultJob = {}) => job => {\n  if (!job.name || (jobProperty && !job[jobProperty])) {\n    throw new Error(`expected request body to match {name${jobProperty ? `, ${jobProperty}` : ''}}`);\n  }\n  return {...defaultJob, ...job};\n};\n\nconst doNotCheck = job => job;\n\nconst getAssertFunction = (assertOnCount, errorOnName) => async (job, jobs) => jobs.count({name: job.name})\n  .then(count => {\n    if (!assertOnCount(count)) {\n      throw new Error(errorOnName(job.name));\n    }\n  });\n\nconst jobAssertions = {\n  alreadyExists: getAssertFunction(count => count > 0, name => `Did not find a job named \"${name}\"`),\n  notExists: getAssertFunction(count => count <= 0, name => `A job named \"${name}\" already exist`),\n  doNotAssert: () => true\n};\n\nconst defineJob = async (job, jobs, agenda) => {\n  const {name, url, method, callback} = job;\n  agenda.define(name, (job, done) => {\n    const {attrs: {data}} = job;\n    let uri = url;\n    // http://example.com/foo/:param1/:param2\n    // =>\n    // http://example.com/foo/value1/value2\n    for (const [key, value] of keyValues(data.params)) {\n      uri = uri.replace(`:${key}`, value);\n    }\n    // http://example.com/foo\n    // =>\n    // http://example.com/foo?query1=value1&query2=value2\n    const query = querystring.stringify(data.query);\n    if (query !== '') {\n      uri += `?${query}`;\n    }\n    // Error if no response in timeout\n    Promise.race([\n      new Promise((resolve, reject) => setTimeout(() => reject(new Error('TimeOutError')), settings.timeout)),\n      rp({\n        method: method || 'POST',\n        uri,\n        body: data.body,\n        headers: data.headers || {},\n        json: true\n      })\n    ])\n      .catch(err => {\n        job.fail(err.message);\n        return {error: err.message};\n      })\n      .then(result => {\n        if (callback) {\n          return rp({\n            method: callback.method || 'POST',\n            uri: callback.url,\n            headers: callback.headers || {},\n            body: {data, response: result},\n            json: true\n          });\n        }\n      })\n      .catch(err => job.fail(`failure in callback: ${err.message}`))\n      .then(() => done());\n  });\n\n  await jobs.count({name})\n    .then(count => count < 1 ? jobs.insert(job) : jobs.update({name}, {$set: job}));\n\n  return 'job defined';\n};\n\nconst deleteJob = async (job, jobs, agenda) => {\n  const cancel = promisify(agenda.cancel).bind(agenda);\n  const numRemoved = await cancel(job);\n  const obj = await jobs.remove(job);\n  return `removed ${obj.result.n} job definitions and ${numRemoved} job instances.`;\n};\n\nconst cancelJob = async (job, jobs, agenda) => {\n  const numRemoved = await promisify(agenda.cancel).bind(agenda)(job);\n  return `${numRemoved} jobs canceled`;\n};\n\nconst getDefaultJobForSchedule = () => ({\n  data: {\n    body: {},\n    params: {},\n    query: {}\n  }\n});\n\nconst scheduleTypes = {\n  now: {\n    fn: agenda => promisify(agenda.now).bind(agenda),\n    message: 'for now',\n    getParams: job => [job.name, job.data]\n  },\n  once: {\n    fn: agenda => promisify(agenda.schedule).bind(agenda),\n    message: 'for once',\n    getParams: job => {\n      // Check if interval is timestamp\n      let time = parseInt(job.interval, 10);\n      time = isNaN(time) ? job.interval : time;\n      // Check if interval is date\n      time = new Date(time);\n      time = isValidDate(time) ? time : job.interval;\n      return [time, job.name, job.data];\n    }\n  },\n  every: {\n    fn: agenda => promisify(agenda.every).bind(agenda),\n    message: 'for repetition',\n    getParams: job => [job.interval, job.name, job.data]\n  }\n};\n\nconst getScheduleJobFunction = scheduleType => async (job, jobs, agenda) => {\n  await scheduleType.fn(agenda)(...scheduleType.getParams(job));\n  return `job scheduled ${scheduleType.message}`;\n};\n\nconst getJobOperation = (checkFunction, jobFunction) => ({check: checkFunction, fn: jobFunction});\n\nconst jobOperations = {\n  create: getJobOperation(getCheckJobFormatFunction('url'), defineJob),\n  update: getJobOperation(getCheckJobFormatFunction(), defineJob),\n  delete: getJobOperation(getCheckJobFormatFunction(), deleteJob),\n  cancel: getJobOperation(doNotCheck, cancelJob),\n  now: getJobOperation(\n    getCheckJobFormatFunction(false, getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.now)\n  ),\n  once: getJobOperation(\n    getCheckJobFormatFunction('interval', getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.once)\n  ),\n  every: getJobOperation(\n    getCheckJobFormatFunction('interval', getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.every)\n  )\n};\n\nconst promiseJobOperation = async (job, jobs, agenda, jobAssertion, jobOperation) => {\n  job = await jobOperation.check(job);\n  await jobAssertion(job, jobs);\n  return jobOperation.fn(job, jobs, agenda);\n};\n\nexport {\n  promiseJobOperation,\n  jobOperations,\n  jobAssertions,\n  defineJob\n};\n","module.exports = require(\"agenda\");","import {promisify} from 'util';\nimport Agenda from 'agenda';\nimport settings from '../settings';\nimport {bootstrapKoaApp} from './util';\nimport {defineJob, jobOperations, jobAssertions, promiseJobOperation} from './job';\n\nconst {app, router} = bootstrapKoaApp();\n\nconst agenda = new Agenda({\n  db: {\n    address: settings.agendaMongoUrl,\n    collection: settings.collection\n  }\n});\n\nconst jobsReady = promisify(agenda.on).bind(agenda)('ready')\n  .then(async () => {\n    const jobs = agenda._mdb.collection(settings.definitions);\n    jobs.toArray = () => {\n      const jobsCursor = jobs.find();\n      return promisify(jobsCursor.toArray).bind(jobsCursor)();\n    };\n    await jobs.toArray()\n      .then(jobsArray => Promise.all(jobsArray.map(job => defineJob(job, jobs, agenda))));\n\n    agenda.start();\n    return jobs;\n  });\n\nconst getJobMiddleware = (jobAssertion, jobOperation, errorCode = 400) => async (ctx, next) => {\n  const job = ctx.request.body || {};\n  job.name = ctx.params.jobName || job.name;\n  const jobs = await jobsReady;\n  ctx.body = await promiseJobOperation(job, jobs, agenda, jobAssertion, jobOperation)\n    .catch(err => ctx.throw(errorCode, err));\n  await next();\n};\n\nrouter.get('/api/job', async (ctx, next) => {\n  ctx.body = await jobsReady.then(jobs => jobs.toArray());\n  await next();\n});\n\nrouter.post('/api/job', getJobMiddleware(jobAssertions.notExists, jobOperations.create));\n\nrouter.del('/api/job/:jobName', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.delete));\n\nrouter.put('/api/job/:jobName', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.update));\n\nrouter.post('/api/job/once', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.once));\n\nrouter.post('/api/job/every', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.every));\n\nrouter.post('/api/job/now', getJobMiddleware(jobAssertions.alreadyExists, jobOperations.now));\n\nrouter.post('/api/job/cancel', getJobMiddleware(jobAssertions.doNotAssert, jobOperations.cancel));\n\nconst graceful = () => {\n  console.log('\\nShutting down gracefully...');\n  agenda.stop(() => {\n    // eslint-disable-next-line unicorn/no-process-exit\n    process.exit(0);\n  });\n};\n\nprocess.on('SIGTERM', graceful);\nprocess.on('SIGINT', graceful);\n\nexport {app, router, agenda, jobsReady};\nexport default app;\n","module.exports = require(\"koa-bodyparser\");","module.exports = require(\"koa-router\");","module.exports = require(\"koa-logger\");","module.exports = require(\"koa\");","module.exports = require(\"supertest\");","module.exports = require(\"ava\");","const {promisify} = require('util');\nconst test = require('ava');\nconst request = require('supertest');\nconst {bootstrapKoaApp, oncePerKey, AsyncCounter} = require('./src/util');\n\nconst agendaAppUrl = 'http://localhost:4041';\nconst testAppUrl = 'http://localhost:4042';\nconst {app: testApp, router: testAppRouter} = bootstrapKoaApp();\nconst getTestAppUrl = path => path ? `${testAppUrl}${path}` : testAppUrl;\n\nconst agendaAppRequest = request(agendaAppUrl);\n\nconst bootstrapApp = async () => {\n  const {app, jobsReady} = require('./src');\n  await promisify(app.listen).bind(app)(4041)\n    .then(() => console.log('agenda-rest app running'));\n\n  await promisify(testApp.listen).bind(testApp)(4042)\n    .then(() => console.log('test app running'));\n  await jobsReady;\n};\n\ntest.before(() => bootstrapApp());\n\ntest.serial('POST /api/job fails without content', async t => {\n  const res = await agendaAppRequest\n    .post('/api/job')\n    .send();\n\n  t.is(res.status, 400);\n});\n\ntest.serial('POST /api/job succeeds when a job is specified', async t => {\n  const res = await agendaAppRequest\n    .post('/api/job')\n    .send({name: 'foo', url: getTestAppUrl('/fooWrong')});\n\n  t.is(res.status, 200);\n});\n\ntest.serial('PUT /api/job fails when the job does not exists', async t => {\n  const res = await agendaAppRequest\n    .put('/api/job/fooWrong')\n    .send({url: getTestAppUrl('/foo')});\n\n  t.is(res.status, 400);\n});\n\ntest.serial('PUT /api/job succeeds when the job exists', async t => {\n  const res = await agendaAppRequest\n    .put('/api/job/foo')\n    .send({url: getTestAppUrl('/foo')});\n\n  t.is(res.status, 200);\n});\n\nconst fooProps = {};\n\nconst defineFooEndpoint = (route, message, countTimes = 1, statusCode = 200) => {\n  const counter = new AsyncCounter(countTimes);\n  fooProps.counter = counter;\n  fooProps.message = message;\n  fooProps.statusCode = statusCode;\n\n  const define = oncePerKey(route, () => testAppRouter.post(route, async (ctx, next) => {\n    ctx.body = fooProps.message;\n    ctx.status = fooProps.statusCode;\n    console.log(`${fooProps.message}! ${await fooProps.counter.count()} of ${fooProps.counter.countTimes}`);\n    await next();\n  }));\n  define();\n  return counter;\n};\n\n/* TODO\ntestAppRouter.post('/foo/:fooParam', async (ctx, next) => {\n  console.log('foo with params invoked!');\n  console.log(ctx.params);\n  console.log(ctx.request.body);\n  ctx.body = 'foo with params success';\n  ctx.status = 200;\n  await next();\n});\n\ntestAppRouter.post('/foo/cb', async (ctx, next) => {\n  console.log('foo callback invoked!');\n  ctx.body = 'foo callback success';\n  ctx.status = 200;\n  await next();\n});\n*/\n\ntest.serial('POST /api/job/now with existing foo definition invokes the foo endpoint', async t => {\n  const counter = defineFooEndpoint('/foo', 'foo now invoked');\n  const res = await agendaAppRequest\n    .post('/api/job/now')\n    .send({name: 'foo'});\n\n  t.is(res.text, 'job scheduled for now');\n\n  await counter.finished;\n});\n\ntest.serial('POST /api/job/every with existing foo definition invokes the foo endpoint', async t => {\n  const counter = defineFooEndpoint('/foo', 'foo every invoked', 3);\n  const res = await agendaAppRequest\n    .post('/api/job/every')\n    .send({name: 'foo', interval: '2 seconds'});\n\n  t.is(res.text, 'job scheduled for repetition');\n\n  await counter.finished;\n});\n\ntest.serial('POST /api/job/once with existing foo definition invokes the foo endpoint', async t => {\n  const counter = defineFooEndpoint('/foo', 'foo once invoked');\n  const res = await agendaAppRequest\n    .post('/api/job/once')\n    .send({name: 'foo', interval: new Date().getTime() + 10000});\n    // .send({name: 'foo', interval: 'in 10 seconds'});\n\n  t.is(res.text, 'job scheduled for once');\n\n  await counter.finished;\n});\n\ntest.serial('DELETE /api/job succeeds when a job is defined', async t => {\n  const res = await agendaAppRequest\n    .delete('/api/job/foo');\n\n  t.is(res.status, 200);\n});\n"],"sourceRoot":""}